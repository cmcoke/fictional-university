{"version":3,"file":"slide.js","mappings":"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","sources":["webpack://fictional-university-theme/external window \"ReactJSXRuntime\"","webpack://fictional-university-theme/external window [\"wp\",\"apiFetch\"]","webpack://fictional-university-theme/external window [\"wp\",\"blockEditor\"]","webpack://fictional-university-theme/external window [\"wp\",\"blocks\"]","webpack://fictional-university-theme/external window [\"wp\",\"components\"]","webpack://fictional-university-theme/external window [\"wp\",\"element\"]","webpack://fictional-university-theme/webpack/bootstrap","webpack://fictional-university-theme/webpack/runtime/compat get default export","webpack://fictional-university-theme/webpack/runtime/define property getters","webpack://fictional-university-theme/webpack/runtime/hasOwnProperty shorthand","webpack://fictional-university-theme/webpack/runtime/make namespace object","webpack://fictional-university-theme/./our-blocks/slide.js"],"sourcesContent":["module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * Registers a custom \"Slide\" block type in WordPress with the following features:\r\n * - The block supports full-width alignment and includes attributes for theme image, alignment, image ID, and image URL.\r\n * - The `EditComponent` manages block content in the editor, allowing users to select an image for the slide background and place nested blocks (like heading or button).\r\n * - It fetches the image URL when the `imgID` is selected and updates the image URL accordingly using the WordPress REST API.\r\n * - The `SaveComponent` outputs the content of any inner blocks when the block is saved.\r\n * - The `InspectorControls` panel enables the user to upload a background image from the media library.\r\n */\r\n\r\n// Import necessary dependencies and components from WordPress packages\r\nimport apiFetch from \"@wordpress/api-fetch\"; // Import apiFetch to make API requests\r\nimport { Button, PanelBody, PanelRow } from \"@wordpress/components\"; // Import UI components for the block settings panel\r\nimport { InnerBlocks, InspectorControls, MediaUpload, MediaUploadCheck } from \"@wordpress/block-editor\"; // Import components for block editor and media upload functionality\r\nimport { registerBlockType } from \"@wordpress/blocks\"; // Import registerBlockType to register custom block types\r\nimport { useEffect } from \"@wordpress/element\"; // Import useEffect for handling side effects in the component\r\n\r\n// Register a new custom block type 'slide'\r\nregisterBlockType(\"ourblocktheme/slide\", {\r\n  title: \"Slide\", // Set the block title in the block editor\r\n  supports: {\r\n    align: [\"full\"] // Support full-width alignment for the block\r\n  },\r\n  attributes: {\r\n    themeimage: { type: \"string\" }, // Attribute for storing the theme image (string)\r\n    align: { type: \"string\", default: \"full\" }, // Attribute for alignment, default is full width\r\n    imgID: { type: \"number\" }, // Attribute to store the image ID\r\n    imgURL: { type: \"string\", default: banner.fallbackimage } // Attribute for storing the image URL, with a fallback image\r\n  },\r\n  edit: EditComponent, // Edit component for rendering the block in the editor\r\n  save: SaveComponent // Save component for rendering the block content on the front end\r\n});\r\n\r\n// Edit component for the slide block\r\nfunction EditComponent(props) {\r\n\r\n  // Effect hook to update the imgURL when themeimage is set\r\n  useEffect(function () {\r\n    if (props.attributes.themeimage) {\r\n      // Set imgURL using the themeimage path and the selected themeimage\r\n      props.setAttributes({ imgURL: `${slide.themeimagepath}${props.attributes.themeimage}` });\r\n    }\r\n  }, []); // The empty dependency array ensures this effect runs only once, on mount\r\n\r\n  // Effect hook to update imgURL based on the imgID\r\n  useEffect(\r\n    function () {\r\n      if (props.attributes.imgID) {\r\n        async function go() {\r\n          // Fetch the media details using the WordPress REST API\r\n          const response = await apiFetch({\r\n            path: `/wp/v2/media/${props.attributes.imgID}`,\r\n            method: \"GET\"\r\n          });\r\n          // Set the image URL using the fetched media details\r\n          props.setAttributes({ themeimage: \"\", imgURL: response.media_details.sizes.pageBanner.source_url });\r\n        }\r\n        go(); // Call the async function to fetch image data\r\n      }\r\n    },\r\n    [props.attributes.imgID] // Dependency array to re-run this effect when imgID changes\r\n  );\r\n\r\n  // Handler for when a file is selected from the media library\r\n  function onFileSelect(x) {\r\n    // Set the imgID attribute with the selected image's ID\r\n    props.setAttributes({ imgID: x.id });\r\n  }\r\n\r\n  // Block editor UI rendering\r\n  return (\r\n    <>\r\n      {/* Inspector Controls for block settings in the sidebar */}\r\n      <InspectorControls>\r\n        <PanelBody title=\"Background\" initialOpen={true}> {/* Panel for background settings */}\r\n          <PanelRow>\r\n            {/* MediaUploadCheck ensures the user has permission to upload media */}\r\n            <MediaUploadCheck>\r\n              {/* MediaUpload component for selecting an image */}\r\n              <MediaUpload\r\n                onSelect={onFileSelect} // Handler for when a file is selected\r\n                value={props.attributes.imgID} // Current selected image ID\r\n                render={({ open }) => {\r\n                  return <Button onClick={open}>Choose Image</Button>; // Render a button to open the media library\r\n                }}\r\n              />\r\n            </MediaUploadCheck>\r\n          </PanelRow>\r\n        </PanelBody>\r\n      </InspectorControls>\r\n\r\n      {/* Render the block's visual layout */}\r\n      <div className=\"hero-slider__slide\" style={{ backgroundImage: `url('${props.attributes.imgURL}')` }}>\r\n        {/* Background image is applied inline, based on imgURL attribute */}\r\n        <div className=\"hero-slider__interior container\">\r\n          <div className=\"hero-slider__overlay t-center\">\r\n            {/* InnerBlocks allows other blocks to be added inside this block */}\r\n            <InnerBlocks allowedBlocks={[\"ourblocktheme/genericheading\", \"ourblocktheme/genericbutton\"]} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n// Save component for rendering the content on the front end (server-side rendering)\r\nfunction SaveComponent() {\r\n  return <InnerBlocks.Content />; // Output the inner blocks content when the block is saved\r\n}\r\n"],"names":["apiFetch","Button","PanelBody","PanelRow","InnerBlocks","InspectorControls","MediaUpload","MediaUploadCheck","registerBlockType","useEffect","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","title","supports","align","attributes","themeimage","type","default","imgID","imgURL","banner","fallbackimage","edit","EditComponent","save","SaveComponent","props","setAttributes","slide","themeimagepath","go","response","path","method","media_details","sizes","pageBanner","source_url","onFileSelect","x","id","children","initialOpen","onSelect","value","render","open","onClick","className","style","backgroundImage","allowedBlocks","Content"],"sourceRoot":""}