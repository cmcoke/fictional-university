{"version":3,"file":"genericbutton.js","mappings":"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","sources":["webpack://fictional-university-theme/./node_modules/@wordpress/icons/build-module/library/link.js","webpack://fictional-university-theme/./inc/ourColors.js","webpack://fictional-university-theme/external window \"ReactJSXRuntime\"","webpack://fictional-university-theme/external window [\"wp\",\"blockEditor\"]","webpack://fictional-university-theme/external window [\"wp\",\"blocks\"]","webpack://fictional-university-theme/external window [\"wp\",\"components\"]","webpack://fictional-university-theme/external window [\"wp\",\"element\"]","webpack://fictional-university-theme/external window [\"wp\",\"primitives\"]","webpack://fictional-university-theme/webpack/bootstrap","webpack://fictional-university-theme/webpack/runtime/compat get default export","webpack://fictional-university-theme/webpack/runtime/define property getters","webpack://fictional-university-theme/webpack/runtime/hasOwnProperty shorthand","webpack://fictional-university-theme/webpack/runtime/make namespace object","webpack://fictional-university-theme/./our-blocks/genericbutton.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst link = /*#__PURE__*/_jsx(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  children: /*#__PURE__*/_jsx(Path, {\n    d: \"M10 17.389H8.444A5.194 5.194 0 1 1 8.444 7H10v1.5H8.444a3.694 3.694 0 0 0 0 7.389H10v1.5ZM14 7h1.556a5.194 5.194 0 0 1 0 10.39H14v-1.5h1.556a3.694 3.694 0 0 0 0-7.39H14V7Zm-4.5 6h5v-1.5h-5V13Z\"\n  })\n});\nexport default link;\n//# sourceMappingURL=link.js.map","const ourColors = [\r\n  { name: \"blue\", color: \"#0d3b66\" },\r\n  { name: \"orange\", color: \"#ee964b\" },\r\n  { name: \"dark-orange\", color: \"#f95738\" }\r\n];\r\n\r\nexport default ourColors;\r\n","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"primitives\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * Registers a \"Generic Button\" block that allows users to create a customizable button with text, size, link, and color options.\r\n */\r\n\r\nimport ourColors from \"../inc/ourColors\"; // Custom color options imported from a separate file\r\nimport { link } from \"@wordpress/icons\"; // Icon for the link button in the toolbar\r\nimport { ToolbarGroup, ToolbarButton, Popover, Button, PanelBody, PanelRow, ColorPalette } from \"@wordpress/components\"; // UI components for toolbar, popover, button, and color palette\r\nimport { RichText, InspectorControls, BlockControls, __experimentalLinkControl as LinkControl, getColorObjectByColorValue } from \"@wordpress/block-editor\"; // Components for text editing, block controls, inspector controls, and color management\r\nimport { registerBlockType } from \"@wordpress/blocks\"; // Function to register the new block\r\nimport { useState } from \"@wordpress/element\"; // State management for visibility of the link picker\r\n\r\n// Registers the \"Generic Button\" block with customizable text, size, link URL, and color options\r\nregisterBlockType(\"ourblocktheme/genericbutton\", {\r\n  title: \"Generic Button\", // Title displayed in the block editor\r\n  attributes: {\r\n    text: { type: \"string\" }, // Stores button text\r\n    size: { type: \"string\", default: \"large\" }, // Size of button, default is large\r\n    linkObject: { type: \"object\", default: { url: \"\" } }, // Link object to store URL\r\n    colorName: { type: \"string\", default: \"blue\" } // Color name for button styling\r\n  },\r\n  edit: EditComponent, // Component for editing the block\r\n  save: SaveComponent // Component for saving block output\r\n});\r\n\r\n// Component that provides the editor interface for the \"Generic Button\" block\r\nfunction EditComponent(props) {\r\n\r\n  // State to control visibility of the link picker popover\r\n  const [isLinkPickerVisible, setIsLinkPickerVisible] = useState(false);\r\n\r\n  // Updates the text attribute based on RichText input\r\n  function handleTextChange(x) {\r\n    props.setAttributes({ text: x });\r\n  }\r\n\r\n  // Toggles the visibility of the link picker popover\r\n  function buttonHandler() {\r\n    setIsLinkPickerVisible(prev => !prev);\r\n  }\r\n\r\n  // Updates the link object attribute when a new link is chosen\r\n  function handleLinkChange(newLink) {\r\n    props.setAttributes({ linkObject: newLink });\r\n  }\r\n\r\n  // Retrieves the current color value based on the color name stored in attributes\r\n  const currentColorValue = ourColors.filter(color => {\r\n    return color.name == props.attributes.colorName;\r\n  })[0].color;\r\n\r\n  // Updates the color name attribute when a new color is chosen from the ColorPalette\r\n  function handleColorChange(colorCode) {\r\n    const { name } = getColorObjectByColorValue(ourColors, colorCode); // Finds the name of the selected color based on color code\r\n    props.setAttributes({ colorName: name });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* BlockControls provides toolbar options for link and size selection */}\r\n      <BlockControls>\r\n\r\n        <ToolbarGroup>\r\n          {/* Button to toggle link picker visibility */}\r\n          <ToolbarButton onClick={buttonHandler} icon={link} />\r\n        </ToolbarGroup>\r\n\r\n        <ToolbarGroup>\r\n          {/* Buttons to set the button size (large, medium, small) */}\r\n          <ToolbarButton\r\n            isPressed={props.attributes.size === \"large\"}\r\n            onClick={() => props.setAttributes({ size: \"large\" })}\r\n          >\r\n            Large\r\n          </ToolbarButton>\r\n          <ToolbarButton\r\n            isPressed={props.attributes.size === \"medium\"}\r\n            onClick={() => props.setAttributes({ size: \"medium\" })}\r\n          >\r\n            Medium\r\n          </ToolbarButton>\r\n          <ToolbarButton\r\n            isPressed={props.attributes.size === \"small\"}\r\n            onClick={() => props.setAttributes({ size: \"small\" })}\r\n          >\r\n            Small\r\n          </ToolbarButton>\r\n        </ToolbarGroup>\r\n\r\n      </BlockControls>\r\n\r\n      {/* InspectorControls provides panel options in the editor sidebar */}\r\n      <InspectorControls>\r\n        <PanelBody title=\"Color\" initialOpen={true}>\r\n          <PanelRow>\r\n            {/* ColorPalette to select from predefined colors */}\r\n            <ColorPalette\r\n              disableCustomColors={true} // Disables custom colors outside the predefined palette\r\n              clearable={false} // Disables clearing the color\r\n              colors={ourColors} // Predefined color options\r\n              value={currentColorValue} // Current selected color\r\n              onChange={handleColorChange} // Updates color attribute on change\r\n            />\r\n          </PanelRow>\r\n        </PanelBody>\r\n      </InspectorControls>\r\n\r\n      {/* RichText component for editing button text with custom styles for size and color */}\r\n      <RichText\r\n        allowedFormats={[]} // Disables rich text formatting options\r\n        tagName=\"a\" // Tag for the button link\r\n        className={`btn btn--${props.attributes.size} btn--${props.attributes.colorName}`} // Dynamic class based on size and color\r\n        value={props.attributes.text} // Button text content\r\n        onChange={handleTextChange} // Updates text attribute on change\r\n      />\r\n\r\n      {/* Popover for link selection, displayed when link picker is visible */}\r\n      {isLinkPickerVisible && (\r\n        <Popover position=\"middle center\" onFocusOutside={() => setIsLinkPickerVisible(false)}>\r\n          {/* LinkControl for selecting or modifying the link URL */}\r\n          <LinkControl\r\n            settings={[]} // Disables additional link settings\r\n            value={props.attributes.linkObject} // Link object with URL\r\n            onChange={handleLinkChange} // Updates link object attribute on change\r\n          />\r\n          {/* Button to confirm link choice and close the link picker */}\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={() => setIsLinkPickerVisible(false)}\r\n            style={{ display: \"block\", width: \"100%\" }}\r\n          >\r\n            Confirm Link\r\n          </Button>\r\n        </Popover>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\n// Component for saving the output of the \"Generic Button\" block\r\nfunction SaveComponent(props) {\r\n  return (\r\n    // Renders the button with link, text, size, and color attributes\r\n    <a href={props.attributes.linkObject.url} className={`btn btn--${props.attributes.size} btn--${props.attributes.colorName}`}>\r\n      {props.attributes.text}\r\n    </a>\r\n  );\r\n}\r\n"],"names":["ourColors","name","color","link","ToolbarGroup","ToolbarButton","Popover","Button","PanelBody","PanelRow","ColorPalette","RichText","InspectorControls","BlockControls","__experimentalLinkControl","LinkControl","getColorObjectByColorValue","registerBlockType","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","title","attributes","text","type","size","default","linkObject","url","colorName","edit","EditComponent","save","SaveComponent","props","isLinkPickerVisible","setIsLinkPickerVisible","handleTextChange","x","setAttributes","buttonHandler","prev","handleLinkChange","newLink","currentColorValue","filter","handleColorChange","colorCode","children","onClick","icon","isPressed","initialOpen","disableCustomColors","clearable","colors","value","onChange","allowedFormats","tagName","className","position","onFocusOutside","settings","variant","style","display","width","href"],"sourceRoot":""}